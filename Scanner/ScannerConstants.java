/* Generated By:JJTree&JavaCC: Do not edit this line. ScannerConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
package Scanner;

import Types.*;
import Exceptions.*;
import Visitors.*;
import jjtNode.*;
import Scanner.*;
public interface ScannerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IMPORT = 4;
  /** RegularExpression Id. */
  int IN = 5;
  /** RegularExpression Id. */
  int MODEL = 6;
  /** RegularExpression Id. */
  int ANALYZE = 7;
  /** RegularExpression Id. */
  int WITH = 8;
  /** RegularExpression Id. */
  int ROW = 9;
  /** RegularExpression Id. */
  int COL = 10;
  /** RegularExpression Id. */
  int NOHEADERS = 11;
  /** RegularExpression Id. */
  int IDKEY = 12;
  /** RegularExpression Id. */
  int TO = 13;
  /** RegularExpression Id. */
  int WHERE = 14;
  /** RegularExpression Id. */
  int EOL = 15;
  /** RegularExpression Id. */
  int COMPARISON = 16;
  /** RegularExpression Id. */
  int EQUAL = 17;
  /** RegularExpression Id. */
  int DEFINERULE = 18;
  /** RegularExpression Id. */
  int IS = 19;
  /** RegularExpression Id. */
  int OR = 20;
  /** RegularExpression Id. */
  int AND = 21;
  /** RegularExpression Id. */
  int NOT = 22;
  /** RegularExpression Id. */
  int SUM = 23;
  /** RegularExpression Id. */
  int AVG = 24;
  /** RegularExpression Id. */
  int COUNT = 25;
  /** RegularExpression Id. */
  int DISTINCT = 26;
  /** RegularExpression Id. */
  int CONSTRAINT = 27;
  /** RegularExpression Id. */
  int EMPTY = 28;
  /** RegularExpression Id. */
  int CONTAINS = 29;
  /** RegularExpression Id. */
  int COMMA = 30;
  /** RegularExpression Id. */
  int LPAREN = 31;
  /** RegularExpression Id. */
  int RPAREN = 32;
  /** RegularExpression Id. */
  int ARGSSTART = 33;
  /** RegularExpression Id. */
  int ARGSSTOP = 34;
  /** RegularExpression Id. */
  int INT = 35;
  /** RegularExpression Id. */
  int FLOAT = 36;
  /** RegularExpression Id. */
  int STRING = 37;
  /** RegularExpression Id. */
  int FILENAME = 38;
  /** RegularExpression Id. */
  int ID = 39;
  /** RegularExpression Id. */
  int COMMENT = 41;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\"\\r\"",
    "\" \"",
    "\"IMPORT\"",
    "\"IN\"",
    "\"MODEL\"",
    "\"ANALYZE\"",
    "\"WITH\"",
    "\"ROW\"",
    "\"COL\"",
    "\"NOHEADERS\"",
    "\"ID\"",
    "\"TO\"",
    "\"WHERE\"",
    "\"\\n\"",
    "<COMPARISON>",
    "\"=\"",
    "\":\"",
    "\"IS\"",
    "\"OR\"",
    "\"AND\"",
    "\"NOT\"",
    "\"SUM\"",
    "\"AVG\"",
    "\"COUNT\"",
    "\"DISTINCT\"",
    "<CONSTRAINT>",
    "\"EMPTY\"",
    "\"CONTAINS\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"BEGIN\"",
    "\"END\"",
    "<INT>",
    "<FLOAT>",
    "<STRING>",
    "<FILENAME>",
    "<ID>",
    "\"//\"",
    "\"//\"",
    "<token of kind 42>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
  };

}
